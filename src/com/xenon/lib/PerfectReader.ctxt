#BlueJ class context
comment0.target=PerfectReader
comment0.text=\ \r\n\ This\ class\ provides\ functionality\ to\ use\ the\ BufferedReader\ Class\ \r\n\ from\ java.io.BufferedReader\ without\ the\ 'skip'\ problem\ persisting\ \r\n\ in\ the\ BuffererReader\ Class.\ \r\n\ \r\n\ <p>\r\n\ Working\:\r\n\ <b>cRead()\ and\ its\ overrides<b>\ \:\r\n\ Accepts\ a\ character\ using\ the\ BufferedReader\ class\ as\ an\ ASCII\ code\r\n\ Checks\ if\ its\ a\ valid\ ASCII\ (code\ >\ 30)\r\n\ If\ not\ the\ loop\ repeats\ till\ it\ has\ satisfied\ the\ condition\r\n\ Converts\ the\ returned\ ASCII\ to\ a\ character\r\n\ Returns\ the\ character\r\n\ \r\n\ <b>iRead()\ and\ its\ overrides<b>\ \:\r\n\ Accepts\ a\ character\ using\ the\ BufferedReader\ class\ as\ an\ ASCII\ code\r\n\ Checks\ if\ its\ a\ valid\ ASCII\ (code\ >\ 30)\r\n\ If\ not\ the\ loop\ repeats\ till\ it\ has\ satisfied\ the\ condition\r\n\ Returns\ the\ ASCII\ code\r\n\ \r\n\ <b>sRead()\ and\ its\ overrides<b>\ \:\r\n\ Simple\ implementation\ of\ the\ readLine()\ function\ of\ BufferedReader\ class.\r\n\ </p>\r\n\ \r\n\ @see\ BufferedReader\r\n\ @see\ Reader\r\n\ @see\ InputStreamReader\r\n\ @see\ java.lang.System\#in\r\n\ \r\n\ @author\:\ AcerOne10\r\n\ @version\:\ 1.0\r\n\ @since\:\ 1.0\r\n
comment1.params=read
comment1.target=PerfectReader(java.io.BufferedReader)
comment1.text=\r\n\ Constructor\ for\ PerfectReader\ class\ with\ an\ object\ of\ BufferedRead\ and\ allocates\ memory\ for\r\n\ the\ instance\ of\ BufferedReader\r\n\ \r\n\ @param\ \tread\tinstance\ of\ BufferedReader\r\n
comment10.params=
comment10.target=java.lang.String\ sRead()
comment10.text=\r\n\ Reads\ a\ single\ line\r\n\ \r\n\ @since\ 1.0\r\n\ \r\n\ @exception\tIOException\ \tIf\ an\ I/O\ error\ occurs\r\n
comment11.params=number
comment11.target=java.lang.String\ sRead(int)
comment11.text=\r\n\ Reads\ 'number'\ of\ lines\r\n\ \r\n\ @since\ 1.0\r\n\ \r\n\ @exception\tIOException\ \tIf\ an\ I/O\ error\ occurs\r\n
comment12.params=s\ offset
comment12.target=void\ sRead(java.lang.String[],\ int)
comment12.text=\r\n\ Reads\ a\ single\ line\ and\ buffers\ it\ to\ place\ offset\ in\ a\ String\ array\r\n\ \r\n\ @since\ 1.0\r\n\ \r\n\ @exception\tIOException\ \tIf\ an\ I/O\ error\ occurs\r\n
comment13.params=s\ offset\ number
comment13.target=void\ sRead(java.lang.String[],\ int,\ int)
comment13.text=\r\n\ Reads\ a\ 'number'\ of\ line\ and\ buffers\ it\ from\ a\ place\ offset\ in\ a\ String\ array\r\n\ \r\n\ @since\ 1.0\r\n\ \r\n\ @exception\tIOException\ \tIf\ an\ I/O\ error\ occurs\r\n
comment2.params=
comment2.target=char\ cRead()
comment2.text=\r\n\ Reads\ a\ single\ character\ from\ the\ user\ \r\n\ using\ the\ read()\ function\ from\ java.io.BufferedReader\r\n\ \r\n\ @since\ 1.0\r\n\ \r\n\ @exception\ \tIOException\ \tIf\ an\ I/O\ error\ occurs\r\n
comment3.params=number
comment3.target=char[]\ cRead(int)
comment3.text=\r\n\ Reads\ 'number'\ of\ characters\ from\ the\ user\ \r\n\ and\ buffers\ its\ output\ to\ a\ character\ array.\r\n\ \r\n\ @since\ 1.0\r\n\ \r\n\ @param\ \tnumber\t\ \ The\ number\ of\ characters\ to\ be\ read.\r\n\ \r\n\ @exception\tIOException\t\tIf\ an\ I/O\ error\ occurs\r\n
comment4.params=c\ offset
comment4.target=void\ cRead(char[],\ int)
comment4.text=\r\n\ Reads\ a\ single\ character\ to\ a\ place\ 'offset'\ in\ character\ array.\r\n\ \r\n\ @param\ \tc\t\tThe\ character\ array\r\n\ @param\ \toffset\ \tThe\ place\ at\ which\ the\ character\ should\ be\ stored.\r\n\ \r\n\ @exception\tIOException\ \t\t\t\tIf\ an\ I/O\ error\ occurs\r\n\ @exception\ \tArrayOutOfBoundsException\ \tIf\ the\ specified\ offset\ is\ invalid\r\n
comment5.params=c\ offset\ number
comment5.target=void\ cRead(char[],\ int,\ int)
comment5.text=\r\n\ Reads\ a\ 'number'\ characters\ starting\ from\ place\ 'offset'\ in\ character\ array.\r\n\ \r\n\ @param\ \tc\t\tThe\ character\ array\r\n\ @param\ \toffset\ \tThe\ place\ at\ which\ the\ character\ should\ be\ stored.\r\n\ @param\ \tnumber\ \tThe\ number\ of\ characters\ to\ be\ read\r\n\ \r\n\ @exception\tIOException\ \t\t\t\tIf\ an\ I/O\ error\ occurs\r\n\ @exception\ \tArrayOutOfBoundsException\ \tIf\ the\ specified\ offset\ is\ invalid\r\n
comment6.params=
comment6.target=int\ iRead()
comment6.text=\r\n\ Reads\ a\ single\ character\ as\ an\ integer\ from\ the\ user\ \r\n\ using\ the\ read()\ function\ from\ java.io.BufferedReader\r\n\ \r\n\ @since\ 1.0\r\n\ \r\n\ @exception\ \tIOException\ \tIf\ an\ I/O\ error\ occurs\r\n
comment7.params=number
comment7.target=int[]\ iRead(int)
comment7.text=\r\n\ Reads\ 'number'\ of\ characters\ as\ integers\ from\ the\ user\ \r\n\ and\ buffers\ its\ output\ to\ a\ integer\ array.\r\n\ \r\n\ @since\ 1.0\r\n\ \r\n\ @param\ \tnumber\t\ \ The\ number\ of\ characters\ to\ be\ read.\r\n\ \r\n\ @exception\tIOException\t\tIf\ an\ I/O\ error\ occurs\r\n
comment8.params=a\ offset
comment8.target=void\ iRead(int[],\ int)
comment8.text=\r\n\ Reads\ a\ single\ character\ as\ an\ integer\ to\ a\ place\ 'offset'\ in\ an\ integer\ array.\r\n\ \r\n\ @since\ 1.0\r\n\ \r\n\ @param\ \ta\t\tThe\ integer\ array\r\n\ @param\ \toffset\ \tThe\ place\ at\ which\ the\ character\ should\ be\ stored.\r\n\ \r\n\ @exception\tIOException\ \t\t\t\tIf\ an\ I/O\ error\ occurs\r\n\ @exception\ \tArrayOutOfBoundsException\ \tIf\ the\ specified\ offset\ is\ invalid\r\n
comment9.params=a\ offset\ number
comment9.target=void\ iRead(int[],\ int,\ int)
comment9.text=\r\n\ Reads\ a\ 'number'\ characters\ as\ integers\ starting\ from\ place\ 'offset'\ in\ integer\ array.\r\n\ \r\n\ @since\ 1.0\r\n\ \r\n\ @param\ \tc\t\tThe\ integer\ array\r\n\ @param\ \toffset\ \tThe\ place\ at\ which\ the\ character\ should\ be\ stored.\r\n\ @param\ \tnumber\ \tThe\ number\ of\ characters\ to\ be\ read\r\n\ \r\n\ @exception\tIOException\ \t\t\t\tIf\ an\ I/O\ error\ occurs\r\n\ @exception\ \tArrayOutOfBoundsException\ \tIf\ the\ specified\ offset\ is\ invalid\r\n
numComments=14
